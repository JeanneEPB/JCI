{"version":3,"sources":["timeline.js"],"names":["timeline","collection","options","timelines","warningLabel","winWidth","window","innerWidth","winHeight","resizeTimer","forceVerticalMode","type","defaultValue","acceptedValues","moveItems","verticalTrigger","itemWrap","el","wrapper","classes","classList","add","parentNode","insertBefore","appendChild","isElementInViewport","triggerPosition","rect","getBoundingClientRect","windowHeight","innerHeight","document","documentElement","clientHeight","defaultTrigger","defaultSettings","match","triggerUnit","value","console","triggerValue","warn","trigger","parseInt","left","clientWidth","addTransforms","transform","style","webkitTransform","msTransform","tl","timelineEl","removeChild","topPosition","items","currentIndex","offsetLeft","horizontalDivider","setUpHorinzontalTimeline","navArrows","arrowPrev","arrowNext","position","str","disabled","item","settings","itemWidth","wrap","offsetWidth","visibleItems","forEach","length","scrollerWidth","scroller","width","height","evenIndexTallest","oddIndexTallest","i","horizontalStartPosition","setHeights","timelinePosition","prevArrow","createElement","setWidths","nextArrow","className","textContent","top","addNavigation","divider","querySelector","addHorizontalDivider","querySelectorAll","arrow","addEventListener","e","preventDefault","this","contains","maxIndex","removeAttribute","remove","opacity","call","resetTimelines","setUpTimelines","setHeightandWidths","lastVisibleIndex","setUpVerticalTimeline","verticalStartPosition","push","timelineName","id","errorPart","data","createTimelines","Error","slice","children","message","Object","keys","key","settingName","testValues","indexOf","triggerArray","_triggerArray","_slicedToArray","triggerValid","_defaultTrigger2","unit","setTimeout","newWinWidth","newWinHeight","jQuery"],"mappings":";;;;;;4aAAA,SAASA,SAASC,EAAYC,GAC5B,IAAMC,EAAY,GACZC,EAAe,YACjBC,EAAWC,OAAOC,WAHxBC,EAAkBP,OAAAA,YACVE,OAAAA,EACAC,EAAe,EAGjBK,EAAJ,CACAC,kBAAA,CAKIC,KAAM,UAHVC,aAAA,KAEEF,wBAAmB,CACjBC,KAAM,SACNC,eAAc,CAAA,SAAA,OAHMA,aAAA,OAMpBD,KAAAA,CACAE,KAAAA,SACAD,eAAc,CAAA,aAAA,YARMA,aAAA,YAWpBD,UAAM,CACNE,KAAAA,UACAD,aAAc,GAEhBE,sBAAW,CACTH,KAAM,SACNC,eAAc,CAAA,OAAA,SAjBMA,aAAA,QAoBpBD,gBADqB,CAErBE,KAAAA,SACAD,aAAc,OAEhBG,aAAAA,CACEJ,KAAM,UACNC,aAAc,IAchB,SAAOI,EAAPC,EAAAC,EAAAC,GACDD,EAAAE,UAAAC,IAAAF,GAKCF,EAAGK,WAAWC,aAAaL,EAASD,GAHtCC,EAAAM,YAAAP,GAYG,SAHDQ,EAAAR,EAAAS,GAID,IAAAC,EAAAV,EAAAW,wBAKOC,EAAevB,OAAOwB,aAAeC,SAASC,gBAAgBC,aAHtEC,EAAAC,EAAApB,gBAAAH,aAAAwB,MAAA,mBACAC,EAASZ,EAAwBC,KACzBC,EAAUC,EAAHU,MACPT,EAAAA,EACN,GAAMK,OAAAA,GAAiCnB,GAAhBoB,EAAgCvB,CACvD2B,QAAIF,KAAAA,iIADmDzB,IAAAA,EAAAA,eAEpCc,EAFoCd,GAEnD4B,EAFmD5B,EAAAA,GAEpCc,EAFoCd,EAAAA,GAMlD4B,MAFe,OAAhBH,EACFE,EAAQE,SAAKC,EAAAF,EAAA,IAKY,MAAhBH,IAN+CK,EAAAC,SAAAD,IAAA,IAExBR,GAFwB,KAAA,KAEvCG,EAAAA,KAFuCK,GAGzDf,EAAAiB,OAAAtC,OAAAC,YAAAwB,SAAAC,gBAAAa,cACyB,GAA1BlB,EAAIU,IAAAA,EAAAA,QACiBK,GAAnBA,EAAAA,KAAUC,EAAAA,MAUb,SAAAG,EAAA7B,EAAA8B,GAIC9B,EAAG+B,MAAMC,gBAAkBF,EAF7B9B,EAAA+B,MAAAE,YAAAH,EACA9B,EAAA+B,MAASF,UAAc7B,EAyLnBkC,SAAGC,EAAWC,GACf,IACKC,EAAAA,gBADLH,EAAAI,MAAAC,GAAAC,WACKH,YACNR,EAAMY,EAAAA,SAAoB3B,GAgCrB,SAJM4B,EAIAR,GA7HTI,IAJaJ,EAqGhBA,EAWOS,EATRC,EACAC,EACQC,EACAC,EAwBAH,EAAAA,WAAAA,UAAAxC,IAAqB,wBAlIZ8B,EAmICc,EA/ERC,OAAAA,WAAe7C,EAAI8C,SAAAzD,oBA7C5ByC,EAAAiB,UAAAjB,EAAAkB,KAAAC,YAAAnB,EAAAgB,SAAAI,aAWGpB,EAAGI,MAAMiB,QAAQ,SAACN,GATlBjE,EAAAA,MAAWwE,MAAQtB,EAAAiB,UAAnBnE,OAEHkD,EAAAuB,cAAAvB,EAAAiB,UAAAjB,EAAAI,MAAAkB,OAWGtB,EAAGwB,SAAS3B,MAAM4B,MAAWzB,EAAGuB,cAAhC,KANF,WACEvB,IAAGiB,EAAY,EACZb,EAAc,EACfW,EAAAA,MAAKlB,QAAM4B,SAAXV,EAAyBE,GAD3BF,EAAAlB,MAAA6B,OAAA,OAGA1B,IAAGuB,EAAHR,EAAsBE,aACnBO,EAAAA,GAAS3B,EACb8B,EAAAA,EAAAD,EAAAA,EAAAC,EAEDC,EAAAA,EAAAF,EAAAA,EAAAE,IAIE5B,IAAGI,EAAAA,cAA2BuB,EAA3BvB,MACDW,EAAAA,MAAKlB,QAAM6B,SAAAA,EAASG,GACdH,EAAAA,GAASX,GACfA,EAAIc,MAAAH,OAAaC,EAAjB,KACqB,WAAnBA,EAAAA,SAAAA,yBADFZ,EAEO9C,UAAAC,IAAA,0BACL0D,EAAAA,EAAkBF,IANtBX,EAAA9C,UAAAC,IAAA,yBAWGkC,EAAMiB,MAAAA,OAASN,EAAfX,KACgB,WAAbyB,EAAAb,SAAac,yBACff,EAAKlB,UAAL3B,IAAuByD,0BACvBhC,EAAgBmC,EAAAA,IAEdnC,EAAAA,UAAcoB,IAAd,0BAIHf,EARDwB,SAQO3B,MAAA6B,OAAAC,EAAAC,EAAN,KAKEG,IA8EFC,EAAAhC,GAzEHA,SAAkB0B,GACnB,GAAA1B,EAAAI,MAAAkB,OAAAtB,EAAAgB,SAAAI,aAAA,CAWC,IAAMa,EAAYrD,SAASsD,cAAc,UATvC/E,EAAOC,SAAgB4D,cAASzD,UAClC4E,EAAAA,EAAAA,MAAAA,GAAAA,aACAJ,EAAAA,UAAAA,gDACDK,EAAAC,UAAA,gDACFJ,EAAAK,YAAA,WAWGF,EAAUE,YAAc,OAT5BL,EAAApC,MAAA0C,IAAApC,EAAA,KACAiC,EAASI,MAAAA,IAAkBrC,EAA3B,KACwBH,IAAlBA,EACFiC,EAAMA,UAAYrD,EACZwD,EAAqBF,IAAAA,EAAAA,MAAcZ,SACzCc,EAAMjC,UAAiBC,GAEvBgC,EAAAA,WAAUC,YAAYJ,GACtBA,EAAAA,WAAUK,YAAcF,IAyDtBJ,CAAAA,GApDAC,SAAqBjC,GACtB,IAFDyC,EAEWpC,EAAAA,WAAAqC,cAA8BpB,qBACvCc,GACDpC,EAAAC,WAAAC,YAAAuC,GAEDzC,IAAGC,EAAW5B,EAAAA,MAAY+D,GAAAA,aAC3B7B,EAAA3B,SAAAsD,cAAA,QACF3B,EAAA8B,UAAA,mBAWC9B,EAAkBV,MAAM0C,IAASpC,EAAjC,KATFH,EAAAC,WAAA5B,YAAAkC,GA4CKoC,CAhBD3C,GANIS,GAXPT,EAgBCA,GALqBC,WAAW2C,iBAAiB,wBATnDlC,EAAAV,EAAAC,WAAAyC,cAAA,8BACA/B,EAASqB,EAAAA,WAAqBU,cAAA,8BACtB9B,EAAWZ,EAAGI,MAAMC,OAAAA,EAAcC,SAAAA,aAClCO,EAAAA,SAAAA,EAAsBD,SAAtBjD,UAAN,IACAgC,GAAAA,QAAAA,KAAcK,EAAaa,SAAAA,GAC5BgC,EAAAC,iBAAA,QAAA,SAAAC,GAWKA,EAAEC,iBARmB,KAD3B3C,EAAA4C,KAAAhF,UAAAiF,SAAA,6BAAA7C,GAAA1C,EAAA0C,GAAA1C,IAC2B0C,EAAA,GACnBI,EAAeR,EACfS,EAAYV,UAAGC,EACfU,EAAYX,UAAGC,GACJD,IAAAmD,GAAjBA,EAAmC9C,GAC7B1C,EAAY6B,EACf6B,EAAaZ,UAAW,EACzBoC,EAAMC,UAAiB,IAErBzC,EAAAA,UAAoBpC,EACpB0C,EAAIN,UAAA,GAEFK,EAAUI,OA6DdC,SAAKqC,IACLrC,EAAK9C,QAAUoF,SAAAA,GAFjBrD,EAAAC,WAAAJ,MAAAyD,QAAA,EAIM7C,EAAAA,WAAeR,UAAW2C,SAAAA,qBAChBnC,EAAAA,MA3TjBY,QAAA,SAAAN,GAKGlD,EAASkD,EAAK2B,cAAc,sBAAuB9D,SAASsD,cAAc,OAAQ,2BAHtFrE,EAAAkD,EAAA2B,cAAA,4BAAA9D,SAAAsD,cAAA,OAAA,2BAsSE/E,SAAO2F,GACL9C,EAASqB,EACPrB,EAAAC,WAAI3B,UAAAA,OAAoByC,uBAAkBnD,oBACxCmD,EAAAA,SAAK9C,gBAAc,SACpB+B,EAAAI,MAAAiB,QAAA,SAAAN,GACFA,EAJDqC,gBAAA,SADFrC,EAAA9C,UAAAoF,OAAA,WAAA,SAAA,uBAAA,2BAkBA,IAAM5C,EAAYT,EAAGC,WAAW2C,iBAAiB,wBATnD,GAAAvB,QAAAkC,KAAA9C,EAAA,SAAAoC,GACAA,EAASW,WAAAA,YAAmBX,KAS1BW,CAAAxD,GAGD7C,OAAAC,YAAA4C,EAAAgB,SAAAzD,mBAWKyC,EAAGC,WAAWhC,UAAUC,IAAI,oBARR,eAA1B8B,EAASyD,SAAAA,MAAiBtG,OAAAC,WAAA4C,EAAAgB,SAAAzD,kBACxBP,EAAmBgD,GAxDrB,SAASQ,GACPR,IAAGC,EAAH,EACAyD,EAAAA,MAAAA,QAAAA,SAAAA,EAAA7B,GACAG,EAAAA,UAAiBhC,OAAjB,WAAA,WACAwC,EAAAzB,EAAAf,EAAAgB,SAAApD,kBAAA,EAAAiE,EACAc,EAAAA,UAAAA,IAAA,YAEDgB,EAAA9B,EAGDA,EAAS+B,IADT,SAAA5D,EAAAgB,SAAA6C,sBAAA,EAAA,IACSD,OAA0BxG,WAAA4C,EAAAgB,SAAAzD,kBAC7BoG,EAAAA,UAAAA,IAAmB,yBAErB5C,EAAK9C,UAAUoF,IAAf,0BAGC,IAFD,IAEOxB,EAAA,EAAAA,EAAA8B,EAAA9B,GAAA,EACL8B,EAAAA,MAAAA,GAAAA,UAAAN,OAAA,WAAA,UAGFlG,OAAI0E,iBAAA,SAA4BzE,WAC9B2D,EAAAA,MAAK9C,QAAUC,SAAAA,GADjBI,EAEOyC,EAAAf,EAAAgB,SAAApD,kBACLmD,EAAK9C,UAAUC,IAAI,cAmCrB0F,CAAmB3F,GAElB+B,EAAAC,WAAAhC,UAAAC,IAAA,oBACDsF,WAAAA,WACAxD,EAAI7C,WAAOC,MAAPkG,QAAwBtC,GAC1BhB,OAjMFlD,EAAWwE,QATbtE,GAAAA,QAAU8G,KAAKhH,EAvFhB,SAAAmD,GAIC,IAAM8D,EAAe9D,EAAW+D,GAAX,IAAoB/D,EAAW+D,GAA/B,IAA0C/D,EAAWoC,UAF5E4B,EAAA,+CACAC,EAASC,EAAgBlE,QACjB8D,OAAAA,EACAE,OAAAA,EACAC,OAAAA,EACFhD,EAAJ,GAGA,IAEA,KAEEA,EAAOjB,EAAWyC,cAAc,oBAD9B,MAAA,IAAA0B,MAAAnH,EAAA,oBAAAgH,EAAA,IAAAF,GAGA,KADFvC,EAAWN,EAAAwB,cAAA,qBAAX,MAEO,IAAA0B,MAAAnH,EAAA,qBAAAgH,EAAA,oBAEL7D,EAAKoB,GAAL6C,MAAed,KAAA/B,EAAA8C,SAAA,GAGblE,MAAAA,GAEH,OADEhB,QAAAE,KAAAyD,EAAAwB,UACF,EAIFC,OAAAC,KAAAzF,GAAAqC,QAAA,SAAAqD,GAxFa,IAAAvF,EAAAwF,EA4FZ3D,EAAS0D,GAAO1F,EAAgB0F,GAAKjH,aADvC+G,EAAAE,GACE1D,EAAS0D,GAAO1F,EAAAA,GAILjC,GAAWA,EAAQ2H,KAF9B1D,EAAS0D,GAAM3H,EAAA2H,IAGb,YAAA1D,EAAgBjE,GAAAA,KACjBiE,EAAA0D,KAlGWvF,EAkGX6B,EAAA0D,GAlGWC,EAkGXD,EA9HL,iBAAAvF,GAAAA,EAAA,GAAA,IAqCIC,QAAQE,KAAQrC,EAAhB,eAA2CkC,EAA3C,8BAA8EwF,EAA9E,wBAHJ,MAgGQ3D,EAAS0D,GAAO1F,EAAgB0F,GAAKjH,cADLuD,WAA7BA,EAAkB4D,GAAAA,MACrB5D,EAAgBhC,GAAAA,iBAAhB,IAAqCvB,EAArCiH,GAAAhH,eAAAmH,QAAA7D,EAAA0D,MACDtF,QAAAE,KAAArC,EAAA,eAAA+D,EAAA0D,GAAA,8BAAAA,EAAA,yBAHH1D,EAIWhC,GAAAA,EAAA0F,GAA8BjH,gBAM1C,IAnBDsB,EAAAC,EAAApB,gBAAAH,aAAAwB,MAAA,mBAuBM6F,EAAe9D,EAASpD,gBAAgBqB,MAAM,mBAtDrD8F,EAAAC,eAoDCF,EApDD,GAoDCzF,EApDD0F,EAAA,GAoDC7F,EApDD6F,EAAA,GAqDOhG,GAAAA,EAaJK,GAZI0F,IAIJ1F,QAAQE,KAAQrC,EAAhB,kEAvDiCgI,GAAA,GAAA,OAoDd/F,GApDc,MAAAA,IA2DjCE,QAAQE,KAAQrC,EAAhB,uEANFgI,GAAIA,GAEchI,MAAhBmC,IAAA,IAAAC,GAAAA,EAAA,IACA4F,QAAAA,KAAehI,EAAfgI,+FACDA,GAAA,GACG,OAAA/F,GAAwBA,EAAqB,IAC/CE,QAAQE,KAAQrC,EAAhBmC,gFACA6F,GAAe,IAGChI,IAAhBmC,EAAA,CAAA,IAAA8F,EAAAF,eACAjG,EADA,GACAkG,EADAC,EAAA,GACehG,EADfgG,EAAA,GAIAD,EAAAA,gBAAA,CACDE,KAAAjG,EAQCC,MAAOE,GAGL2B,EAASrD,UAAYqD,EAASI,eAR7B/B,QAAAA,KADuBpC,EACvBoC,8BADuB2B,EAAArD,UACvB0B,kDADuB2B,EAAAI,aACvB/B,yDAAcH,EAAAA,UADS8B,EAAAI,cAI5BJ,EAASpD,KAAAA,CACPuH,WAAAA,EACAhG,KAAAA,EAFFqC,SAAAA,EAcEpB,MAAAA,EATFY,SAAAA,MAoNI4C,IAEF5D,OAAGC,iBAAWhC,SAAc,WAC5BmH,aAAW9H,GACT0C,EAAGC,WAAiBqD,WACrB,IAFD+B,EAAAlI,OAAAC,WAfFkI,EAAAnI,OAAAwB,YAmBD0G,IAAAnI,GAAAoI,IAAAjI,IAWKoG,IATNvG,EAAAmI,EACA5B,EAAAA,IAEAtG,OAKIA,OAAIkI,SALRlI,OAAAoI,OAOMrI,GAAAA,SAAWmI,SAAAA,GAEZ,OADChI,SAAAA,KAAYiI,GACbrC","file":"timeline.min.js","sourcesContent":["function timeline(collection, options) {\r\n  const timelines = [];\r\n  const warningLabel = 'Timeline:';\r\n  let winWidth = window.innerWidth;\r\n  let winHeight = window.innerHeight;\r\n  let resizeTimer;\r\n  let currentIndex = 0;\r\n\r\n  // Set default settings\r\n  const defaultSettings = {\r\n    forceVerticalMode: {\r\n      type: 'integer',\r\n      defaultValue: 600\r\n    },\r\n    horizontalStartPosition: {\r\n      type: 'string',\r\n      acceptedValues: ['bottom', 'top'],\r\n      defaultValue: 'top'\r\n    },\r\n    mode: {\r\n      type: 'string',\r\n      acceptedValues: ['horizontal', 'vertical'],\r\n      defaultValue: 'vertical'\r\n    },\r\n    moveItems: {\r\n      type: 'integer',\r\n      defaultValue: 1\r\n    },\r\n    verticalStartPosition: {\r\n      type: 'string',\r\n      acceptedValues: ['left', 'right'],\r\n      defaultValue: 'left'\r\n    },\r\n    verticalTrigger: {\r\n      type: 'string',\r\n      defaultValue: '15%'\r\n    },\r\n    visibleItems: {\r\n      type: 'integer',\r\n      defaultValue: 3\r\n    }\r\n  };\r\n\r\n  // Helper function to test whether values are an integer\r\n  function testValues(value, settingName) {\r\n    if (typeof value !== 'number' && value % 1 !== 0) {\r\n      console.warn(`${warningLabel} The value \"${value}\" entered for the setting \"${settingName}\" is not an integer.`);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // Helper function to wrap an element in another HTML element\r\n  function itemWrap(el, wrapper, classes) {\r\n    wrapper.classList.add(classes);\r\n    el.parentNode.insertBefore(wrapper, el);\r\n    wrapper.appendChild(el);\r\n  }\r\n\r\n  // Helper function to wrap each element in a group with other HTML elements\r\n  function wrapElements(items) {\r\n    items.forEach((item) => {\r\n      itemWrap(item.querySelector('.timeline__content'), document.createElement('div'), 'timeline__content__wrap');\r\n      itemWrap(item.querySelector('.timeline__content__wrap'), document.createElement('div'), 'timeline__item__inner');\r\n    });\r\n  }\r\n\r\n  // Helper function to check if an element is partially in the viewport\r\n  function isElementInViewport(el, triggerPosition) {\r\n    const rect = el.getBoundingClientRect();\r\n    const windowHeight = window.innerHeight || document.documentElement.clientHeight;\r\n    const defaultTrigger = defaultSettings.verticalTrigger.defaultValue.match(/(\\d*\\.?\\d*)(.*)/);\r\n    let triggerUnit = triggerPosition.unit;\r\n    let triggerValue = triggerPosition.value;\r\n    let trigger = windowHeight;\r\n    if (triggerUnit === 'px' && triggerValue >= windowHeight) {\r\n      console.warn('The value entered for the setting \"verticalTrigger\" is larger than the window height. The default value will be used instead.');\r\n      [, triggerValue, triggerUnit] = defaultTrigger;\r\n    }\r\n    if (triggerUnit === 'px') {\r\n      trigger = parseInt(trigger - triggerValue, 10);\r\n    } else if (triggerUnit === '%') {\r\n      trigger = parseInt(trigger * ((100 - triggerValue) / 100), 10);\r\n    }\r\n    return (\r\n      rect.top <= trigger &&\r\n      rect.left <= (window.innerWidth || document.documentElement.clientWidth) &&\r\n      (rect.top + rect.height) >= 0 &&\r\n      (rect.left + rect.width) >= 0\r\n    );\r\n  }\r\n\r\n  // Helper function to add transform styles\r\n  function addTransforms(el, transform) {\r\n    el.style.webkitTransform = transform;\r\n    el.style.msTransform = transform;\r\n    el.style.transform = transform;\r\n  }\r\n\r\n  // Create timelines\r\n  function createTimelines(timelineEl) {\r\n    const timelineName = timelineEl.id ? `#${timelineEl.id}` : `.${timelineEl.className}`;\r\n    const errorPart = 'could not be found as a direct descendant of';\r\n    const data = timelineEl.dataset;\r\n    let wrap;\r\n    let scroller;\r\n    let items;\r\n    const settings = {};\r\n\r\n    // Test for correct HTML structure\r\n    try {\r\n      wrap = timelineEl.querySelector('.timeline__wrap');\r\n      if (!wrap) {\r\n        throw new Error(`${warningLabel} .timeline__wrap ${errorPart} ${timelineName}`);\r\n      } else {\r\n        scroller = wrap.querySelector('.timeline__items');\r\n        if (!scroller) {\r\n          throw new Error(`${warningLabel} .timeline__items ${errorPart} .timeline__wrap`);\r\n        } else {\r\n          items = [].slice.call(scroller.children, 0);\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.warn(e.message);\r\n      return false;\r\n    }\r\n\r\n    // Test setting input values\r\n    Object.keys(defaultSettings).forEach((key) => {\r\n      settings[key] = defaultSettings[key].defaultValue;\r\n\r\n      if (data[key]) {\r\n        settings[key] = data[key];\r\n      } else if (options && options[key]) {\r\n        settings[key] = options[key];\r\n      }\r\n\r\n      if (defaultSettings[key].type === 'integer') {\r\n        if (!settings[key] || !testValues(settings[key], key)) {\r\n          settings[key] = defaultSettings[key].defaultValue;\r\n        }\r\n      } else if (defaultSettings[key].type === 'string') {\r\n        if (defaultSettings[key].acceptedValues && defaultSettings[key].acceptedValues.indexOf(settings[key]) === -1) {\r\n          console.warn(`${warningLabel} The value \"${settings[key]}\" entered for the setting \"${key}\" was not recognised.`);\r\n          settings[key] = defaultSettings[key].defaultValue;\r\n        }\r\n      }\r\n    });\r\n\r\n    // Further specific testing of input values\r\n    const defaultTrigger = defaultSettings.verticalTrigger.defaultValue.match(/(\\d*\\.?\\d*)(.*)/);\r\n    const triggerArray = settings.verticalTrigger.match(/(\\d*\\.?\\d*)(.*)/);\r\n    let [, triggerValue, triggerUnit] = triggerArray;\r\n    let triggerValid = true;\r\n    if (!triggerValue) {\r\n      console.warn(`${warningLabel} No numercial value entered for the 'verticalTrigger' setting.`);\r\n      triggerValid = false;\r\n    }\r\n    if (triggerUnit !== 'px' && triggerUnit !== '%') {\r\n      console.warn(`${warningLabel} The setting 'verticalTrigger' must be a percentage or pixel value.`);\r\n      triggerValid = false;\r\n    }\r\n    if (triggerUnit === '%' && (triggerValue > 100 || triggerValue < 0)) {\r\n      console.warn(`${warningLabel} The 'verticalTrigger' setting value must be between 0 and 100 if using a percentage value.`);\r\n      triggerValid = false;\r\n    } else if (triggerUnit === 'px' && triggerValue < 0) {\r\n      console.warn(`${warningLabel} The 'verticalTrigger' setting value must be above 0 if using a pixel value.`);\r\n      triggerValid = false;\r\n    }\r\n\r\n    if (triggerValid === false) {\r\n      [, triggerValue, triggerUnit] = defaultTrigger;\r\n    }\r\n\r\n    settings.verticalTrigger = {\r\n      unit: triggerUnit,\r\n      value: triggerValue\r\n    };\r\n\r\n    if (settings.moveItems > settings.visibleItems) {\r\n      console.warn(`${warningLabel} The value of \"moveItems\" (${settings.moveItems}) is larger than the number of \"visibleItems\" (${settings.visibleItems}). The value of \"visibleItems\" has been used instead.`);\r\n      settings.moveItems = settings.visibleItems;\r\n    }\r\n\r\n    timelines.push({\r\n      timelineEl,\r\n      wrap,\r\n      scroller,\r\n      items,\r\n      settings\r\n    });\r\n  }\r\n\r\n  if (collection.length) {\r\n    [].forEach.call(collection, createTimelines);\r\n  }\r\n\r\n  // Set height and widths of timeline elements and viewport\r\n  function setHeightandWidths(tl) {\r\n    // Set widths of items and viewport\r\n    function setWidths() {\r\n      tl.itemWidth = tl.wrap.offsetWidth / tl.settings.visibleItems;\r\n      tl.items.forEach((item) => {\r\n        item.style.width = `${tl.itemWidth}px`;\r\n      });\r\n      tl.scrollerWidth = tl.itemWidth * tl.items.length;\r\n      tl.scroller.style.width = `${tl.scrollerWidth}px`;\r\n    }\r\n\r\n    // Set height of items and viewport\r\n    function setHeights() {\r\n      let oddIndexTallest = 0;\r\n      let evenIndexTallest = 0;\r\n      tl.items.forEach((item, i) => {\r\n        item.style.height = 'auto';\r\n        const height = item.offsetHeight;\r\n        if (i % 2 === 0) {\r\n          evenIndexTallest = height > evenIndexTallest ? height : evenIndexTallest;\r\n        } else {\r\n          oddIndexTallest = height > oddIndexTallest ? height : oddIndexTallest;\r\n        }\r\n      });\r\n\r\n      const transformString = `translateY(${evenIndexTallest}px)`;\r\n      tl.items.forEach((item, i) => {\r\n        if (i % 2 === 0) {\r\n          item.style.height = `${evenIndexTallest}px`;\r\n          if (tl.settings.horizontalStartPosition === 'bottom') {\r\n            item.classList.add('timeline__item--bottom');\r\n            addTransforms(item, transformString);\r\n          } else {\r\n            item.classList.add('timeline__item--top');\r\n          }\r\n        } else {\r\n          item.style.height = `${oddIndexTallest}px`;\r\n          if (tl.settings.horizontalStartPosition !== 'bottom') {\r\n            item.classList.add('timeline__item--bottom');\r\n            addTransforms(item, transformString);\r\n          } else {\r\n            item.classList.add('timeline__item--top');\r\n          }\r\n        }\r\n      });\r\n      tl.scroller.style.height = `${evenIndexTallest + oddIndexTallest}px`;\r\n    }\r\n\r\n    if (window.innerWidth > tl.settings.forceVerticalMode) {\r\n      setWidths();\r\n      setHeights();\r\n    }\r\n  }\r\n\r\n  // Create and add arrow controls to horizontal timeline\r\n  function addNavigation(tl) {\r\n    if (tl.items.length > tl.settings.visibleItems) {\r\n      const prevArrow = document.createElement('button');\r\n      const nextArrow = document.createElement('button');\r\n      const topPosition = tl.items[0].offsetHeight;\r\n      prevArrow.className = 'timeline-nav-button timeline-nav-button--prev';\r\n      nextArrow.className = 'timeline-nav-button timeline-nav-button--next';\r\n      prevArrow.textContent = 'Previous';\r\n      nextArrow.textContent = 'Next';\r\n      prevArrow.style.top = `${topPosition}px`;\r\n      nextArrow.style.top = `${topPosition}px`;\r\n      if (currentIndex === 0) {\r\n        prevArrow.disabled = true;\r\n      } else if (currentIndex + 1 === tl.items.length) {\r\n        nextArrow.disabled = true;\r\n      }\r\n      tl.timelineEl.appendChild(prevArrow);\r\n      tl.timelineEl.appendChild(nextArrow);\r\n    }\r\n  }\r\n\r\n  // Add the centre line to the horizontal timeline\r\n  function addHorizontalDivider(tl) {\r\n    const divider = tl.timelineEl.querySelector('.timeline-divider');\r\n    if (divider) {\r\n      tl.timelineEl.removeChild(divider);\r\n    }\r\n    const topPosition = tl.items[0].offsetHeight;\r\n    const horizontalDivider = document.createElement('span');\r\n    horizontalDivider.className = 'timeline-divider';\r\n    horizontalDivider.style.top = `${topPosition}px`;\r\n    tl.timelineEl.appendChild(horizontalDivider);\r\n  }\r\n\r\n  // Calculate the new position of the horizontal timeline\r\n  function timelinePosition(tl) {\r\n    const position = tl.items[currentIndex].offsetLeft;\r\n    const str = `translate3d(-${position}px, 0, 0)`;\r\n    addTransforms(tl.scroller, str);\r\n  }\r\n\r\n  // Make the horizontal timeline slide\r\n  function slideTimeline(tl) {\r\n    const navArrows = tl.timelineEl.querySelectorAll('.timeline-nav-button');\r\n    const arrowPrev = tl.timelineEl.querySelector('.timeline-nav-button--prev');\r\n    const arrowNext = tl.timelineEl.querySelector('.timeline-nav-button--next');\r\n    const maxIndex = tl.items.length - tl.settings.visibleItems;\r\n    const moveItems = parseInt(tl.settings.moveItems, 10);\r\n    [].forEach.call(navArrows, (arrow) => {\r\n      arrow.addEventListener('click', function(e) {\r\n        e.preventDefault();\r\n        currentIndex = this.classList.contains('timeline-nav-button--next') ? (currentIndex += moveItems) : (currentIndex -= moveItems);\r\n        if (currentIndex === 0 || currentIndex < 0) {\r\n          currentIndex = 0;\r\n          arrowPrev.disabled = true;\r\n          arrowNext.disabled = false;\r\n        } else if (currentIndex === maxIndex || currentIndex > maxIndex) {\r\n          currentIndex = maxIndex;\r\n          arrowPrev.disabled = false;\r\n          arrowNext.disabled = true;\r\n        } else {\r\n          arrowPrev.disabled = false;\r\n          arrowNext.disabled = false;\r\n        }\r\n        timelinePosition(tl);\r\n      });\r\n    });\r\n  }\r\n\r\n  // Set up horizontal timeline\r\n  function setUpHorinzontalTimeline(tl) {\r\n    tl.timelineEl.classList.add('timeline--horizontal');\r\n    setHeightandWidths(tl);\r\n    timelinePosition(tl);\r\n    addNavigation(tl);\r\n    addHorizontalDivider(tl);\r\n    slideTimeline(tl);\r\n  }\r\n\r\n  // Set up vertical timeline\r\n  function setUpVerticalTimeline(tl) {\r\n    let lastVisibleIndex = 0;\r\n    tl.items.forEach((item, i) => {\r\n      item.classList.remove('animated', 'fadeIn');\r\n      if (!isElementInViewport(item, tl.settings.verticalTrigger) && i > 0) {\r\n        item.classList.add('animated');\r\n      } else {\r\n        lastVisibleIndex = i;\r\n      }\r\n      const divider = tl.settings.verticalStartPosition === 'left' ? 1 : 0;\r\n      if (i % 2 === divider && window.innerWidth > tl.settings.forceVerticalMode) {\r\n        item.classList.add('timeline__item--right');\r\n      } else {\r\n        item.classList.add('timeline__item--left');\r\n      }\r\n    });\r\n    for (let i = 0; i < lastVisibleIndex; i += 1) {\r\n      tl.items[i].classList.remove('animated', 'fadeIn');\r\n    }\r\n    // Bring elements into view as the page is scrolled\r\n    window.addEventListener('scroll', () => {\r\n      tl.items.forEach((item) => {\r\n        if (isElementInViewport(item, tl.settings.verticalTrigger)) {\r\n          item.classList.add('fadeIn');\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // Reset timelines\r\n  function resetTimelines(tl) {\r\n    currentIndex = 0;\r\n    tl.timelineEl.classList.remove('timeline--horizontal', 'timeline--mobile');\r\n    tl.scroller.removeAttribute('style');\r\n    tl.items.forEach((item) => {\r\n      item.removeAttribute('style');\r\n      item.classList.remove('animated', 'fadeIn', 'timeline__item--left', 'timeline__item--right');\r\n    });\r\n    const navArrows = tl.timelineEl.querySelectorAll('.timeline-nav-button');\r\n    [].forEach.call(navArrows, (arrow) => {\r\n      arrow.parentNode.removeChild(arrow);\r\n    });\r\n  }\r\n\r\n  // Set up the timelines\r\n  function setUpTimelines() {\r\n    timelines.forEach((tl) => {\r\n      tl.timelineEl.style.opacity = 0;\r\n      if (!tl.timelineEl.classList.contains('timeline--loaded')) {\r\n        wrapElements(tl.items);\r\n      }\r\n      resetTimelines(tl);\r\n      if (window.innerWidth <= tl.settings.forceVerticalMode) {\r\n        tl.timelineEl.classList.add('timeline--mobile');\r\n      }\r\n      if (tl.settings.mode === 'horizontal' && window.innerWidth > tl.settings.forceVerticalMode) {\r\n        setUpHorinzontalTimeline(tl);\r\n      } else {\r\n        setUpVerticalTimeline(tl);\r\n      }\r\n      tl.timelineEl.classList.add('timeline--loaded');\r\n      setTimeout(() => {\r\n        tl.timelineEl.style.opacity = 1;\r\n      }, 500);\r\n    });\r\n  }\r\n\r\n  // Initialise the timelines on the page\r\n  setUpTimelines();\r\n\r\n  window.addEventListener('resize', () => {\r\n    clearTimeout(resizeTimer);\r\n    resizeTimer = setTimeout(() => {\r\n      const newWinWidth = window.innerWidth;\r\n      const newWinHeight = window.innerHeight;\r\n      if (newWinWidth !== winWidth || newWinHeight !== winHeight) {\r\n        setUpTimelines();\r\n        winWidth = newWinWidth;\r\n        winHeight = newWinHeight;\r\n      }\r\n    }, 250);\r\n  });\r\n}\r\n\r\n// Register as a jQuery plugin if the jQuery library is present\r\nif (window.jQuery) {\r\n  (($) => {\r\n    $.fn.timeline = function(opts) {\r\n      timeline(this, opts);\r\n      return this;\r\n    };\r\n  })(window.jQuery);\r\n}\r\n"]}